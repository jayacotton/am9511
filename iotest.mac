;
;  This code will test if it is possiblel to write a number to the FPU and read it
;  back.
;
;  It has a scope loop to allow repeated writes or reads.
;
;  It has code to cause the FPU to push PI onto the stack and read out
;  the floating point value, to be compaired to an in core copy.
;
;  You may need to modify this code to work with your version of the assembler.
;  I am useing my asm8080 program.
;
;  This code is written in calmac32 and assembled with asm8080 (see my repo)
;  it will run on 8080/z80 and 8085.
;
#include "../../macro-library/pre.mac"
#include "../../macro-library/post.mac"
#include "../../macro-library/prestack.mac"
#include "../../macro-library/wto.mac"
#include "../../macro-library/cpmcommon.mac"


	include	"defs.inc"
	include "io.inc"
Switch	equ	255
; possible switch settings for selecting the test.
S1	equ	1	; write loop
S2	equ	2	; read loop
S3	equ	4	; write/read loop
S4	equ	8	; write command and read result
S5	equ	16	; go back to cpm

Statled equ	255
	common
	org	100h	; placed here to make it convenient for cpm.
	pre

start	call	init
sloop	in	Switch
	cpi	S1
	jz	test1
	cpi	S2
	jz	test2
	cpi	S3
	jz	test3
	cpi	S4
	jz	test4
	cpi	S5
	jz	done	; back to cpm
	jmp	sloop
;
;  write to am9511 scoop loop
;
test1	equ	$ 
	in	Switch	; make sure the user still wants this test
	cpi	S1
	jnz	done
	lxi	h,PI
	call	AMwrt
	jmp	test1
; 
;  read from am9511 scoop loop
;
test2	equ	$
	in	Switch
	cpi	S2
	jnz	done
	lxi	h,Buff
	call	AMred
	jmp	test2
;
;  write/read am9511 scoop loop
;
test3	equ	$
	in	Switch
	cpi	S3
	jnz	done
	lxi	h,PI
	call	AMwrt
	lxi	h,Buff
	call	AMred
	jmp	test3
;
;  write commands to am9511 and read back results.
;
;  this is a simple test, force the FPU to put PI on the stack
;  and read it back to see if it does it.
;
test4	equ	$
	in	Switch
	cpi	S4
	jnz	done
	mvi	a,PUPI	; push PI to TOS in the FPU
	call	AMWrcmd
	lxi	h,Buff
	call	AMred	; Read back the value, should be PI
; check the results
	lxi	h,Buff
	lxi	d,PI	; Pre calculated value of PI
	mvi	c,4
t4l	ldax	d
	cmp	m
	jnz	Bad
	inx	h
	inx	d
	dcr	c
	jnz	t4l
	jmp	test4
Bad	wto	'Compair error'
	jmp	test4
;
;  init the program and any am9511 stuff needed.
;
init	equ	$
	wto	'IoTest for AM9511'
	ret
;
; i/o support code for test program
;
;   AMwrt on entry hl -> a floating point number
;    a and c get mangled
;
AMwrt	equ	$
	call	AMWait
	mvi	c,4
AMw1	mov	a,m
	inx	h
	out	APUDr
	dcr	c
	jnz	AMw1
	ret
;
;  AMred on entry hl -> output buffer for floating point number
;   a and c get mangled
;
AMred	equ	$
	call	AMWait
	mvi	c,4
AMr1	in	APUDr
	mov	m,a
	inx	h
	dcr	c
	jnz	AMr1
	ret
;
;  AMWait.  Wait here for the am9511 to be NOT busy
;   a get clobbered
;
AMWait	equ	$
	in	APUSr
	ani	Busy
	jnz	AMWait
	ret
;
; AMWrcmd on entry a has a command byte
;
AMWrcmd	equ	$
	push	psw
	call	AMWait
	pop	psw
	out	APUCr
	ret
PI	db	40h,49h,0fh,0dbh
Buff	ds	6
;
; all done go to cpm
;
done	equ	$
	post
	prestack
	end
